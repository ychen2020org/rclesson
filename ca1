library(GEOquery)
library(oligo)
library(dplyr)
library(limma)
gse50737 <- getGEO('GSE50737')
gse50737_geo <- getGEO('GSE50737')
gse50737 <- gse50737[[1]]


#Importing raw (unprocessed) Affymetrix microarray data
gse50737_celfiles <- list.celfiles('GSE50737_RAW',listGzipped=TRUE,full.names=TRUE)
gse50737_celdata <- read.celfiles(gse50737_celfiles) 
pData(gse50737_celdata)
gse50737_celdata[,1]
image(gse50737_celdata[,1])

#Working with experimental metadata
library(tidyverse)
varLabels(gse50737)
gse50737$supplementary_file
pd <- pData(gse50737)
pd
pd['cel_file'] <- str_split(pd$supplementary_file,"/") %>% map_chr(tail,1)
gse50737_celdata <- read.celfiles(paste0('GSE50737_RAW',pd$cel_file),phenoData=phenoData(gse50737))
pData(gse50737)[,c("geo_accession","tissue:ch1","treatment:ch1")]

#rma
gse50737_celdata <- read.celfiles(gse50737_celfiles)
hist(gse50737) 
gse50737_eset <- rma(gse50737_celdata)
hist(gse50737_eset) 



#differential expression
pData(gse50737_eset) <- pData(gse50737_geo[[1]])
treat <- gse50737_eset[['treatment:ch1']]
design <- model.matrix(~treat)
design
colnames(design)[colnames(design) %in% c("treatbenzene poisoning", "treatcontrol")] <- c("benzene_poisoning", "control")
design
fit<-lmFit(gse50737_eset,design)
fitted.ebayes <- eBayes(fit)
topTable(fitted.ebayes)
summary(decideTests(fitted.ebayes[,"benzene_poisoning"],lfc=1)) #How to use this ???



#with contrasts
design <- model.matrix(~ 0 + treat)
colnames(design) <- c("benzene_exposed","benzene_poisoning","control")
design
contrasts_matrix <- makeContrasts(poisoning_blood=benzene_poisoning-control,
                                   exposed_blood=benzene_exposed-control,
                                   interaction_exposed_poisoning=benzene_poisoning-benzene_exposed,
                                   levels=design)
contrasts_matrix

fit <- lmFit(gse50737_eset,design)
fit2 <- contrasts.fit(fit,contrasts=contrasts_matrix)
fit2 <- eBayes(fit2)
summary(decideTests(fit2,lfc=1))

#as in the lecture
fit2
volcanoplot(fit2)
interesting_genes <- topTable(fit2,number=Inf,p.value = 0.05,lfc=2)
length(interesting_genes)
volcanoplot(fitted.ebayes, coef=2, main=sprintf("%d features pass our cutoffs",nrow(interesting_genes))) #use fitted.ebayes or fit2
points(interesting_genes[['logFC']],-log10(interesting_genes[['P.Value']]),col='red')

#as in the website
gse50737_celdata <- read.celfiles(paste0('GSE50737/',pd$cel_file),phenoData=phenoData(gse50737))
gse50737_eset <- rma(gse50737_celdata)
design <- model.matrix( ~ gse50737_eset[['treatment:ch1']])
fit <- lmFit(gse50737_eset,design)
fitted.ebayes <- eBayes(fit)
volcanoplot(fitted.ebayes,coef=2)
interesting_genes <- topTable(fitted.ebayes,number=Inf,p.value = 0.05,lfc=2)
volcanoplot(fitted.ebayes, coef=2, main=sprintf("%d features pass our cutoffs",nrow(interesting_genes)))
points(interesting_genes[['logFC']],-log10(interesting_genes[['P.Value']]),col='red')

#annotation
gse <- getGEO(filename = "GSE50737_family.soft.gz",destdir = ".")
id_probe <- gse@gpls$GPL16686@dataTable@table
head(id_probe)
probe2gene <- id_probe[,c(1,6,7)]


interesting_genes <- topTable(fit2,number=Inf,p.value = 0.05,lfc=1)
df_ID <- data.frame(ID = rownames(interesting_genes))# creat a data.frome only have one column called "ID"
annotations <- merge (df_ID, probe2gene, by = "ID") #you can merge these two data.frame by "ID" column, and then you can get a new data.frame which contains your interesting genes (ID) and the gene annotation (GB_ACC)
#dim(interesting_genes): 222rows
#dim(annotations): 222rows

interesting_genes[['ID']]=rownames(interesting_genes)
interesting_genes
results <- dplyr::inner_join(annotations, interesting_genes,by="ID")
results

library(readr)

upregulated_poisoning_blood <- results[results$poisoning_blood>0,]
downregulated_poisoning_blood <- results[results$poisoning_blood<0,]
write_excel_csv(upregulated_poisoning_blood ,"gse50737_upregulated_poisoning_blood .csv")
write_excel_csv(downregulated_poisoning_blood ,"gse50737_downregulated_poisoning_blood.csv")

upregulated_exposed_blood <- results[results$exposed_blood>0,]
downregulated_exposed_blood <- results[results$exposed_blood<0,]
write_excel_csv(upregulated_exposed_blood ,"gse50737_upregulated_exposed_blood .csv")
write_excel_csv(downregulated_exposed_blood ,"gse50737_downregulated_exposed_blood.csv")

upregulated_interaction_exposed_poisoning <- results[results$exposed_blood>0,]
downregulated_interaction_exposed_poisoning <- results[results$exposed_blood<0,]
write_excel_csv(upregulated_interaction_exposed_poisoning ,"gse50737_upregulated_interaction_exposed_poisoning .csv")
write_excel_csv(downregulated_interaction_exposed_poisoning ,"gse50737_downregulated_interaction_exposed_poisoning.csv")
